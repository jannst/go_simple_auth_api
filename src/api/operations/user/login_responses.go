// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"haw-hamburg.de/cloudWP/src/apimodel"
)

// LoginOKCode is the HTTP code returned for type LoginOK
const LoginOKCode int = 200

/*LoginOK successful operation

swagger:response loginOK
*/
type LoginOK struct {
	/*date in UTC when token expires

	 */
	XExpiresAfter strfmt.DateTime `json:"X-Expires-After"`

	/*
	  In: Body
	*/
	Payload *apimodel.AccessTokenResponse `json:"body,omitempty"`
}

// NewLoginOK creates LoginOK with default headers values
func NewLoginOK() *LoginOK {

	return &LoginOK{}
}

// WithXExpiresAfter adds the xExpiresAfter to the login o k response
func (o *LoginOK) WithXExpiresAfter(xExpiresAfter strfmt.DateTime) *LoginOK {
	o.XExpiresAfter = xExpiresAfter
	return o
}

// SetXExpiresAfter sets the xExpiresAfter to the login o k response
func (o *LoginOK) SetXExpiresAfter(xExpiresAfter strfmt.DateTime) {
	o.XExpiresAfter = xExpiresAfter
}

// WithPayload adds the payload to the login o k response
func (o *LoginOK) WithPayload(payload *apimodel.AccessTokenResponse) *LoginOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the login o k response
func (o *LoginOK) SetPayload(payload *apimodel.AccessTokenResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LoginOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Expires-After

	xExpiresAfter := o.XExpiresAfter.String()
	if xExpiresAfter != "" {
		rw.Header().Set("X-Expires-After", xExpiresAfter)
	}

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// LoginBadRequestCode is the HTTP code returned for type LoginBadRequest
const LoginBadRequestCode int = 400

/*LoginBadRequest Invalid username/password supplied

swagger:response loginBadRequest
*/
type LoginBadRequest struct {

	/*
	  In: Body
	*/
	Payload *apimodel.APIError `json:"body,omitempty"`
}

// NewLoginBadRequest creates LoginBadRequest with default headers values
func NewLoginBadRequest() *LoginBadRequest {

	return &LoginBadRequest{}
}

// WithPayload adds the payload to the login bad request response
func (o *LoginBadRequest) WithPayload(payload *apimodel.APIError) *LoginBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the login bad request response
func (o *LoginBadRequest) SetPayload(payload *apimodel.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LoginBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
