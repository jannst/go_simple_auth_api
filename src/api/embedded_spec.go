// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "User and Session Management API",
    "title": "Auth",
    "version": "1.0.0"
  },
  "host": "localhost:4000",
  "basePath": "/auth",
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "User login",
        "operationId": "login",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "User login information",
              "type": "object",
              "required": [
                "email",
                "password"
              ],
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "maxLength": 256
                },
                "password": {
                  "type": "string",
                  "maxLength": 256,
                  "minLength": 8,
                  "example": "VerySecureLol_69"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AccessTokenResponse"
            },
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": [
          "User"
        ],
        "summary": "User logout",
        "operationId": "logout",
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "500": {
            "description": "logout failed",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Register new User",
        "operationId": "register",
        "parameters": [
          {
            "description": "New User Object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewUser"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "user created"
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/userinfo": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": [
          "User"
        ],
        "summary": "Get Information about the current user",
        "operationId": "info",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AccessTokenResponse": {
      "required": [
        "token",
        "user"
      ],
      "properties": {
        "token": {
          "description": "Token to be included in X-API-TOKEN Header for secured endpoints",
          "type": "string",
          "maxLength": 32,
          "minLength": 32,
          "pattern": "[a-f0-9]{32}",
          "example": "dce7fce4dd4a41371fb6b4889d957974ba158d8dec805c8046e4ed95c7414ce6"
        },
        "user": {
          "$ref": "#/definitions/User"
        }
      }
    },
    "ApiError": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "BaseUser": {
      "type": "object",
      "required": [
        "username",
        "email"
      ],
      "properties": {
        "email": {
          "type": "string",
          "format": "email",
          "maxLength": 256
        },
        "username": {
          "type": "string",
          "maxLength": 64,
          "minLength": 4,
          "example": "JanST"
        }
      }
    },
    "NewUser": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseUser"
        },
        {
          "type": "object",
          "required": [
            "username",
            "email",
            "password"
          ],
          "properties": {
            "password": {
              "type": "string",
              "maxLength": 256,
              "minLength": 8,
              "example": "VerySecureLol_69"
            }
          }
        }
      ]
    },
    "User": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseUser"
        },
        {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "format": "uint32"
            }
          }
        }
      ]
    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "X-API-TOKEN",
      "in": "header"
    }
  },
  "tags": [
    {
      "description": "User operations",
      "name": "User"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "User and Session Management API",
    "title": "Auth",
    "version": "1.0.0"
  },
  "host": "localhost:4000",
  "basePath": "/auth",
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "User login",
        "operationId": "login",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "User login information",
              "type": "object",
              "required": [
                "email",
                "password"
              ],
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "maxLength": 256
                },
                "password": {
                  "type": "string",
                  "maxLength": 256,
                  "minLength": 8,
                  "example": "VerySecureLol_69"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AccessTokenResponse"
            },
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": [
          "User"
        ],
        "summary": "User logout",
        "operationId": "logout",
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "500": {
            "description": "logout failed",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Register new User",
        "operationId": "register",
        "parameters": [
          {
            "description": "New User Object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewUser"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "user created"
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/userinfo": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": [
          "User"
        ],
        "summary": "Get Information about the current user",
        "operationId": "info",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AccessTokenResponse": {
      "required": [
        "token",
        "user"
      ],
      "properties": {
        "token": {
          "description": "Token to be included in X-API-TOKEN Header for secured endpoints",
          "type": "string",
          "maxLength": 32,
          "minLength": 32,
          "pattern": "[a-f0-9]{32}",
          "example": "dce7fce4dd4a41371fb6b4889d957974ba158d8dec805c8046e4ed95c7414ce6"
        },
        "user": {
          "$ref": "#/definitions/User"
        }
      }
    },
    "ApiError": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "BaseUser": {
      "type": "object",
      "required": [
        "username",
        "email"
      ],
      "properties": {
        "email": {
          "type": "string",
          "format": "email",
          "maxLength": 256
        },
        "username": {
          "type": "string",
          "maxLength": 64,
          "minLength": 4,
          "example": "JanST"
        }
      }
    },
    "NewUser": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseUser"
        },
        {
          "type": "object",
          "required": [
            "username",
            "email",
            "password"
          ],
          "properties": {
            "password": {
              "type": "string",
              "maxLength": 256,
              "minLength": 8,
              "example": "VerySecureLol_69"
            }
          }
        }
      ]
    },
    "User": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseUser"
        },
        {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "format": "uint32"
            }
          }
        }
      ]
    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "X-API-TOKEN",
      "in": "header"
    }
  },
  "tags": [
    {
      "description": "User operations",
      "name": "User"
    }
  ]
}`))
}
